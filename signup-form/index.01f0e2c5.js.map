{"mappings":"AAAA,MAAMA,WAAaC,SAASC,cAAa,gBACnCC,OAAM,IAAOH,WAAWI,iBAAgB,WAAYC,KAAKC,IAAK,CAClEA,MAAAA,EACAC,MAAOD,EAAMJ,cAAa,mBAC1BM,SAAUF,EAAMJ,cAAa,wBAGzBO,WAAU,EAAMC,MAAAA,EAAOC,YAAAA,KACjB,KAAVD,EAAME,OAAI,GAAeD,oBAA4B,GAEjDE,WAAU,EAAMH,MAAAA,KACH,wCACEI,KAAKJ,EAAME,QAAI,GAAA,kCAK9BG,YAAW,CACfC,UAAS,CAAGP,YACZQ,SAAQ,CAAGR,YACXS,MAAK,CAAGT,WAAYI,YACpBM,SAAQ,CAAGV,aAGPW,aAAY,EAAMb,MAAAA,EAAOD,MAAAA,EAAOE,SAAAA,EAAUa,MAAAA,MAE9Cb,EAASc,YAAcD,EACvBf,EAAMiB,UAAUC,IAAG,gBACnBjB,EAAMkB,aAAY,gBAAiB,IAG/BC,aAAY,EAAMnB,MAAAA,EAAOD,MAAAA,EAAOE,SAAAA,MAEpCA,EAASc,YAAW,GACpBhB,EAAMiB,UAAUI,OAAM,gBACtBpB,EAAMqB,gBAAe,iBAGjBC,SAAYvB,IAChB,MAAKC,MAAGA,GAAUD,EACZe,EACJN,YAAYR,EAAMuB,MACfzB,KAAK0B,GAAUA,EAAMxB,KACrByB,MAAMC,GAAqB,KAARA,KAAoB,eAChC3B,EAAOe,MAAAA,IAGfa,SAAY5B,IACZA,EAAMe,MACRD,aAAad,GAEboB,aAAapB,GAERA,GAGH6B,UAAS,EAAMd,MAAAA,KAAYe,QAAQf,GAEnCgB,OAAUC,IACdA,EAAEC,iBAEF,MAAMC,EAAgBrC,OAAOE,IAAIwB,UAAUxB,IAAI6B,UAAUO,OAAON,WAEnC,IAAzBK,EAAcE,OAEhBC,QAAQC,IAAG,kCAENJ,EAAc,GAAGjC,MAAMsC,SAGhC7C,WAAW8C,iBAAgB,SAAWT","sources":["projects/signup-form/src/script.js"],"sourcesContent":["const signupForm = document.querySelector('.signup-form');\nconst fields = [...signupForm.querySelectorAll('.field')].map((field) => ({\n  field,\n  input: field.querySelector('.input__element'),\n  feedback: field.querySelector('.field__feedback'),\n}));\n\nconst checkEmpty = ({ value, placeholder }) =>\n  value.trim() === '' ? `${placeholder} cannot be empty` : '';\n\nconst checkEmail = ({ value }) => {\n  const emailRegExp = /^\\w+([.-]\\w+)*@\\w+([.-]\\w+)*\\.\\w{2,}$/;\n  return emailRegExp.test(value.trim())\n    ? ''\n    : 'Looks like this is not an email';\n};\n\nconst inputChecks = {\n  firstName: [checkEmpty],\n  lastName: [checkEmpty],\n  email: [checkEmpty, checkEmail],\n  password: [checkEmpty],\n};\n\nconst showFeedback = ({ input, field, feedback, error }) => {\n  // eslint-disable-next-line no-param-reassign\n  feedback.textContent = error;\n  field.classList.add('field--error');\n  input.setAttribute('aria-invalid', true);\n};\n\nconst hideFeedback = ({ input, field, feedback }) => {\n  // eslint-disable-next-line no-param-reassign\n  feedback.textContent = '';\n  field.classList.remove('field--error');\n  input.removeAttribute('aria-invalid');\n};\n\nconst validate = (field) => {\n  const { input } = field;\n  const error =\n    inputChecks[input.name]\n      .map((check) => check(input))\n      .find((errorMsg) => errorMsg !== '') || null;\n  return { ...field, error };\n};\n\nconst updateUi = (field) => {\n  if (field.error) {\n    showFeedback(field);\n  } else {\n    hideFeedback(field);\n  }\n  return field;\n};\n\nconst hasErrors = ({ error }) => Boolean(error);\n\nconst signup = (e) => {\n  e.preventDefault();\n\n  const invalidFields = fields.map(validate).map(updateUi).filter(hasErrors);\n\n  if (invalidFields.length === 0) {\n    // eslint-disable-next-line no-console\n    console.log('Signup form validation passed.');\n    // send data to backend, handle response\n  } else invalidFields[0].input.focus();\n};\n\nsignupForm.addEventListener('submit', signup);\n"],"names":["signupForm","document","querySelector","fields","querySelectorAll","map","field","input","feedback","checkEmpty","value","placeholder","trim","checkEmail","test","inputChecks","firstName","lastName","email","password","showFeedback","error","textContent","classList","add","setAttribute","hideFeedback","remove","removeAttribute","validate","name","check","find","errorMsg","updateUi","hasErrors","Boolean","signup","e","preventDefault","invalidFields","filter","length","console","log","focus","addEventListener"],"version":3,"file":"index.01f0e2c5.js.map"}